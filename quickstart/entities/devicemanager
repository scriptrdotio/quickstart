var document = require("document");
var calcSpeed = require("../entities/process/speed");
var aggregates = require("../lib/aggregates");
/**
 * @function save
 * @param {Object} data: data as received from device
 * @return {String} device id
 */
function save(data) {
    var result = document.save(data);
    if (result.metadata.status == "failure"){
        log.error("Error while saving asset data " +  JSON.stringify(result));
        return "ERROR";
    }
    log.info("Saved Document: ", JSON.stringify(result));
}
/**
 * @function calculate speed and average speed for device
 * @param {Object} data: data as received from device
 * @return {String} device id
 */
function processLocation(data) {
    /*
     * Start calculate current speed and average speed
 	 */
    log.info("Start Calculating Speed.")
    var speed = calcSpeed.calculateSpeed(data);
    log.info("Speed "+speed)
    if (speed != -1  && speed != "ERROR") {      
        //calculate average speed
        calcSpeed.calculateAvgSpeed(data.deviceId, speed, data.timestamp)
    };
    log.info("End Calculating Speed.")
    /*
     * End calculate current speed and average speed
 	 */
    return data.deviceId;
}
function publishAcceleration(data) {
    log.info("publishing Acceleration: "+JSON.stringify(data))
    if(data["formtype"] == "acceleration") {
        var res = {"x": data.accelerationX, "y": data.accelerationY, "z": data.accelerationZ};
        var accelerometerId = data["formtype"]+"_"+data.deviceId
        publish("responseChannel", {"id": accelerometerId, "result": res});
    }
}
function publishPosition(deviceId) {
    var res = {};
    var result = document.get("phone_"+deviceId);
    if(result.metadata.status == "failure"){
        if(result.metadata.errorCode == "DOCUMENT_NOT_FOUND"){
            log.error("Error while getting data " + JSON.stringify(result));
            return "ERROR";
        }    
    }else{ 
        var data = result.result
        res[data.deviceId] = {"trip0": [{"lat": {"value": parseFloat(data.latitude)}, "long": {"value": parseFloat(data.longitude) }, "speed" : {
            "value" : data.speed,
            "description" : "kmh"}}], "source" : "simulator", "order" : [ "trip0" ]}
        //Publish new location data for device
        publish("responseChannel", {"id": data["formtype"], "result": res});
        
        //Publish device calculated speed
         var speedId = "speedometer_speed_"+"_"+ data.deviceId
         publish("responseChannel", {"id": speedId, "result": parseFloat(data.speed)});
        
        var deviceAggregates =  aggregates.getAggregates(data.deviceId); 
        var avgSpeedId = "speedometer_average_speed_"+"_"+ data.deviceId
        //Publish average speed whenever calculated
        publish("responseChannel", {"id": avgSpeedId, "result": parseFloat(deviceAggregates.average) * 1000});
        
        
        var deviceDataPoints =  aggregates.getDataPoints(data.deviceId);
        var lineChartId = "linechart_speed_"+ data.deviceId;
        //publish new registered speed point
        log.info("deviceDataPoints: "+JSON.stringify(deviceDataPoints));
        publish("responseChannel", {"id": lineChartId, "result": deviceDataPoints});
    }
}
